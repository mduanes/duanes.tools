###################
# GLOBAL SETTINGS #
###################

source("C. scripts/setup.R")

# GEOGRAPHY AND TIME SETTINGS ----
ctys <- c("Chatham") # specifies the county (or set of county) that data will be pulled for

region_name <- ctys

st <- c("GA") # 2 letter abbr. specifies the state(s) that the set county(s) are in, should just be GA usually
year <- lubridate::year(Sys.Date()) # specifies the year that data is pulled for
# is current year by default

ctys_fips<- mds_counties(state=st) %>%
    filter(NAME %in% ctys) %>%
    mutate(fips=paste0(STATEFP,COUNTYFP)) %>%
    pull(fips)

ctys_region <- c(ctys) # specifies the  in-state county (or set of county) in the region (included in figures but not all)
                      # for multistate need to add name of state (matching st) after a comma
                      # must include ctys

# gosa year
y_gosa <- "2023-24"

# add if using any out of state counties
out_of_state_fips <- c("none")
out_of_state_name <- c("none")
out_of_state_state <- c("none")

# FRED DATA
# set fred key
fredr_set_key("4575cc1fdf837464fbcb89185056624f")

fred_unemp <- fredr::fredr_series_search_text(paste0("Unemployment Rate in ", ctys, " County, ", st)) %>% 
  filter(title == paste0("Unemployment Rate in ", ctys, " County, ", st) & 
           frequency == "Monthly") %>%
  pull(id)
fred_labforce <- fredr::fredr_series_search_text(paste0("Civilian Labor Force in ", ctys, " County, ", st)) %>% 
  filter(title == paste0("Civilian Labor Force in ", ctys, " County, ", st) & 
           frequency == "Monthly") %>%
  pull(id)

# lightcast path
lightcast_path <- "A. Data Packets/PROPEL communities/Haralson/data/Haralson lightcast.xlsx" # path for lightcast data
lightcast_sheets <- excel_sheets(lightcast_path)[-1]


# FIND LATEST YEAR FOR ACS ----
# set acs to max year if too high
y_acs <- year(Sys.Date()) - 2

# DATASET SELECTIONS ----
# each dataset has an option for both county and tract

# BASE DATASETS ---- 
# race pop totals and percentages from the decennial census
decennial_race_cty <- TRUE 
decennial_race_tract <- FALSE

# basic list of common acs vars
# education, housing tenure, income, etc.
acs_basic_vars_cty <- TRUE
acs_basic_vars_tract <- FALSE

# any extra acs vars specified below
acs_extra_vars_cty <- TRUE
acs_extra_vars_tract <- FALSE

# ipeds path 
# DEPRECIATEAD, DO NOT USE UNLESS NEEDED ipeds_path <- "D. data/ipeds/burke_tech.xlsx" # path for ipeds data

# Extra ACS vars list
# add any variable codes you want to include
# use acs_lookup() to search for var codes
B23008 <- rep(0,14)
for (i in 1:length(B23008)) {
  B23008[i] <- paste0("B23008_",str_pad(i,3,"left",pad="0"))
}

extra_acs_vars <- c(B23008)

# same as acs_basic_vars but over a 3 period timespan with a five year time gap
# between each period
acs_timeseries_cty <- FALSE
acs_timeseries_tract <- FALSE

# components of change (births, deaths, migration) and 
# population estimates from 2010 to the specified year
components_cty <- FALSE
estimates_cty <- FALSE

# CALCULATED DATASETS ----
# datasets which use the base dataset to calculate percentages by county/tract for a
# number of common variables

# household income percentage breakdown
acs_hhincome_cty <- FALSE
acs_hhincome_tract <- FALSE

# educational attainment percentage breakdown
acs_ed_cty <- FALSE
acs_ed_tract <- FALSE

# AESTHETICS ----

# default palettes based on data type
default_pal_continuous <- RColorBrewer::brewer.pal(8,"Greens") # color palette for continuous data

default_pal_2way <- c("#BA0C2F","#E4002B", "#D6D2C4", "#35889D","#004E60")
default_pal_1way <- c("#594A25","#D6D2C4","#C8D8EB", "#35889D","#004E60")

pal_binary <- c("#D6D2C4","#C8D8EB") # palette for binary data

default_pal_discrete <- c("#D6D2C4","#9EA2A2","#C8D8EB","#B4BD00","#00A3AD","#554F47","#004E60",
                          "#594A25","#BA0C2F","#000") # uga color palette

# line/point width defaults for line graph
default_line_width <- 3 # sets the default width of the line(s)
default_point_size <- 4 # sets the default size of the points

# default text label color for plots
default_label_color <- "black" # sets the color of any text labels in graphs
default_axis_text_size <- 25
default_graph_linewidth <- 1.5

# legend position for maps
default_legend_position <- c("right","top") # sets the default legend position for choropleth maps
                                            # must be given as c(horizontal, vertical)
                                            # can be given as numbers e.g. c(1,0)
                                            # or text e.g. c("left","bottom")

# SOURCES ----
# source statements attached to figures

source_acs <- paste0("Source: American Community Survey (5-Year), ",y_acs-4,"-",y_acs)
source_estimates <- "Source: Vintage 2023 Census Population Estimates"
source_decennial <- paste0("Source: US Census Bureau, ", round_any(year,10,f=floor), " Redistricting File")
source_fred <- "Source: US Bureau of Labor Statistics (via Federal Reserve Economic Data)"
source_lodes <- "Source: US Census Bureau,\nLongitudinal Employer-Household Dynamics\nOrigin-Destination; All Workers"
source_gosa <- "Source: Georgia Governor's Office of Student Achievement"
source_lightcast <- "Source: US Bureau of Labor Statistics; Lightcast"
source_ipeds <- "Source: Integrated Postsecondary Education Data System (IPEDS)"

# OTHER SETTINGS ----

# Decennial Race Variables
race_vars <- c(total = "P1_001N",
               white = "P1_003N",
          black = "P1_004N",
          asian = "P1_006N",
          hispanic = "P2_002N") # list of variable names for the race totals in the decennial
                                # census pull; might need to be changed if going to previous/future
                                # census


# themes
theme_adg_map <- theme_minimal() +
  theme(axis.text = element_blank(),
        plot.background = element_rect(fill="white",linewidth = 0),
        panel.grid = element_blank(),
        legend.text = element_text(size=default_axis_text_size*0.75),
        legend.title = element_text(size=default_axis_text_size,face="bold"),
        plot.caption = element_text(size=0.6*default_axis_text_size,face="italic",
                                    hjust=0.5))

theme_adg <- theme_minimal() + 
  theme(axis.text = element_text(size=default_axis_text_size),
        axis.title = element_text(size=default_axis_text_size,face = "bold"),
        legend.text = element_text(size=default_axis_text_size*0.75),
        legend.title = element_text(size=default_axis_text_size,face="bold"),
        legend.position = default_legend_position,
        panel.grid = element_line(linewidth=default_graph_linewidth),
        panel.grid.minor = element_line(linetype="dashed"),
        panel.border = element_rect(linewidth=default_graph_linewidth*1.5),
        plot.caption = element_text(size=0.6*default_axis_text_size,face="italic",
                                    hjust=0.5))

theme_set(theme_adg)

