
# Load required libraries
library(ggplot2)
library(ambient)
library(dplyr)
library(reshape2)

# Set grid size
grid_size <- 200

# Generate a grid of coordinates
grid <- expand.grid(
  x = seq(0, 1, length.out = grid_size),
  y = seq(0, 1, length.out = grid_size)
)

# Generate fractal noise for elevation
grid$elevation <- fracture(
  noise = gen_simplex,
  fractal = fbm,
  octaves = 5,
  x = grid$x,
  y = grid$y
)

# Apply a radial mask to ensure water surrounds the land
center_x <- 0.5
center_y <- 0.5
grid$distance_to_center <- sqrt((grid$x - center_x)^2 + (grid$y - center_y)^2)
grid$elevation <- grid$elevation - grid$distance_to_center * 1.5  # Adjust multiplier for more/less ocean

# Define thresholds for different elevation levels
water_threshold <- 0.0
lowland_threshold <- 0.1
highland_threshold <- 0.3
mountain_threshold <- 0.5

# Classify terrain
grid <- grid %>%
  mutate(
    terrain = case_when(
      elevation > mountain_threshold ~ "mountain",
      elevation > highland_threshold ~ "highland",
      elevation > lowland_threshold ~ "lowland",
      elevation > water_threshold ~ "water",
      TRUE ~ "deep_water"
    )
  )

# Simulate rivers: trace water flow from high to low elevation
trace_river <- function(grid, start_x, start_y) {
  river_path <- data.frame(x = numeric(), y = numeric())
  current_x <- start_x
  current_y <- start_y
  while (TRUE) {
    river_path <- rbind(river_path, data.frame(x = current_x, y = current_y))
    neighbors <- grid %>%
      filter(
        x >= current_x - 1/grid_size & x <= current_x + 1/grid_size &
        y >= current_y - 1/grid_size & y <= current_y + 1/grid_size
      )
    if (nrow(neighbors) == 0) break
    next_point <- neighbors %>%
      filter(elevation == min(elevation)) %>%
      slice(1)
    if (next_point$elevation >= grid %>% filter(x == current_x & y == current_y) %>% pull(elevation)) break
    current_x <- next_point$x
    current_y <- next_point$y
  }
  return(river_path)
}

# Generate rivers starting from random high elevation points
set.seed(42)
river_starts <- grid %>%
  filter(elevation > lowland_threshold) %>%
  sample_n(10)
rivers <- do.call(rbind, lapply(1:nrow(river_starts), function(i) {
  trace_river(grid, river_starts$x[i], river_starts$y[i])
}))

# Plot the map with rivers
ggplot(grid, aes(x = x, y = y, fill = terrain)) +
  geom_raster() +
  geom_path(data = rivers, aes(x = x, y = y), color = "deepskyblue", size = 0.3) +
  scale_fill_manual(
    values = c(
      deep_water = "darkblue",
      water = "steelblue",
      lowland = "forestgreen",
      highland = "darkgreen",
      mountain = "gray60"
    )
  ) +
  coord_equal() +
  theme_void() +
  ggtitle("Continent with Multiple Elevation Levels and Simulated Rivers")
